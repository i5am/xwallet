name: Build iOS App

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch: # ÂÖÅËÆ∏ÊâãÂä®Ëß¶Âèë

jobs:
  build-ios:
    name: Build iOS Application
    runs-on: macos-latest # ‰ΩøÁî® macOS runner
    
    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4
      
      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: üì¶ Install Dependencies
        run: npm ci
      
      - name: üèóÔ∏è Build Web Assets
        run: npm run build
      
      - name: üçé Setup iOS Environment
        run: |
          # ÂÆâË£Ö CocoaPods
          sudo gem install cocoapods
          
          # ÂêåÊ≠• Capacitor
          npx cap sync ios
          
          # ÂÆâË£Ö iOS ‰æùËµñ
          cd ios/App
          pod install
          cd ../..
      
      - name: üì± Import Signing Certificates
        env:
          CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # ÂàõÂª∫‰∏¥Êó∂ keychain
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          
          # ÂØºÂÖ•ËØÅ‰π¶
          CERTIFICATE_PATH=$RUNNER_TEMP/certificate.p12
          echo -n "$CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
      
      - name: üìù Import Provisioning Profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          # ÂØºÂÖ• Provisioning Profile
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      
      - name: üî® Build iOS App
        run: |
          cd ios/App
          
          # ‰ΩøÁî® xcodebuild ÊûÑÂª∫
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $RUNNER_TEMP/App.xcarchive \
            archive
          
          # ÂØºÂá∫ IPA
          xcodebuild -exportArchive \
            -archivePath $RUNNER_TEMP/App.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath $RUNNER_TEMP/build
      
      - name: üì§ Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WDK-Wallet-iOS
          path: ${{ runner.temp }}/build/*.ipa
          retention-days: 30
      
      - name: üßπ Cleanup Keychain
        if: always()
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db || true
